version: '3.8'

services:
  # Next.js App
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_NAME=FinanceApp
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
      - NEXT_PUBLIC_REALTIME_ENABLED=true
      - DATABASE_URL=postgresql://postgres:password@db:5432/financeapp
    depends_on:
      - db
      - realtime-server
    networks:
      - finance-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=financeapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - finance-network
    restart: unless-stopped

  # Real-time WebSocket Server
  realtime-server:
    build:
      context: .
      dockerfile: Dockerfile.realtime
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/financeapp
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - finance-network
    restart: unless-stopped

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - finance-network
    restart: unless-stopped

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
      - realtime-server
    networks:
      - finance-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  finance-network:
    driver: bridge 